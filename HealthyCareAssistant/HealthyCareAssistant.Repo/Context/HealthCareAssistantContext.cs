// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using HealthyCareAssistant.Contact.Repo.Entity;
using Microsoft.EntityFrameworkCore;

namespace HealthyCareAssistant.Repo.Context;

public partial class HealthCareAssistantContext : DbContext
{
    public HealthCareAssistantContext(DbContextOptions<HealthCareAssistantContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ChatbotService> ChatbotServices { get; set; }

    public virtual DbSet<Drug> Drugs { get; set; }

    public virtual DbSet<MedicineCabinet> MedicineCabinets { get; set; }

    public virtual DbSet<MedicineCabinetDrug> MedicineCabinetDrugs { get; set; }

    public virtual DbSet<MessageHistory> MessageHistories { get; set; }

    public virtual DbSet<Reminder> Reminders { get; set; }

    public virtual DbSet<ReminderDrug> ReminderDrugs { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ChatbotService>(entity =>
        {
            entity.HasKey(e => e.ServiceId).HasName("PK__ChatbotS__C51BB0EA17768971");

            entity.ToTable("ChatbotService");

            entity.Property(e => e.ServiceId).HasColumnName("ServiceID");
            entity.Property(e => e.ServiceType).HasMaxLength(50);
        });

        modelBuilder.Entity<Drug>(entity =>
        {
            entity.HasKey(e => e.DrugId).HasName("PK__Drug__908D66F6CC3EC020");

            entity.ToTable("Drug");

            entity.HasIndex(e => e.SoDangKy, "UQ__Drug__6886EC6723D0FB50").IsUnique();

            entity.Property(e => e.DrugId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DrugID");
            entity.Property(e => e.CongTyDk).HasMaxLength(255);
            entity.Property(e => e.CongTySx).HasMaxLength(255);
            entity.Property(e => e.CongTySxCode).HasMaxLength(100);
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DotPheDuyet).HasMaxLength(50);
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.HieuLuc).HasMaxLength(50);
            entity.Property(e => e.NongDo).HasMaxLength(255);
            entity.Property(e => e.NuocDk).HasMaxLength(100);
            entity.Property(e => e.NuocSx).HasMaxLength(100);
            entity.Property(e => e.PhanLoai).HasMaxLength(255);
            entity.Property(e => e.SearchCount).HasDefaultValue(0);
            entity.Property(e => e.SoDangKy).HasMaxLength(50);
            entity.Property(e => e.SoQuyetDinh).HasMaxLength(50);
            entity.Property(e => e.Status).HasMaxLength(20);
            entity.Property(e => e.TenThuoc).HasMaxLength(255);
            entity.Property(e => e.TuoiTho).HasMaxLength(50);
            entity.Property(e => e.UpdatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<MedicineCabinet>(entity =>
        {
            entity.HasKey(e => e.CabinetId).HasName("PK__Medicine__9C173EB3C58BD564");

            entity.ToTable("MedicineCabinet");

            entity.Property(e => e.CabinetId).HasColumnName("CabinetID");
            entity.Property(e => e.CabinetName).HasMaxLength(255);
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.UpdatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.MedicineCabinets)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__MedicineC__UserI__52593CB8");
        });

        modelBuilder.Entity<MedicineCabinetDrug>(entity =>
        {
            entity.HasKey(e => e.CabinetDrugId).HasName("PK__Medicine__11F6C2AC1F6C418D");

            entity.ToTable("MedicineCabinetDrug");

            entity.Property(e => e.CabinetDrugId).HasColumnName("CabinetDrugID");
            entity.Property(e => e.CabinetId).HasColumnName("CabinetID");
            entity.Property(e => e.DrugId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DrugID");

            entity.HasOne(d => d.Cabinet).WithMany(p => p.MedicineCabinetDrugs)
                .HasForeignKey(d => d.CabinetId)
                .HasConstraintName("FK__MedicineC__Cabin__5BE2A6F2");

            entity.HasOne(d => d.Drug).WithMany(p => p.MedicineCabinetDrugs)
                .HasForeignKey(d => d.DrugId)
                .HasConstraintName("FK__MedicineC__DrugI__5CD6CB2B");
        });

        modelBuilder.Entity<MessageHistory>(entity =>
        {
            entity.HasKey(e => e.MessageId).HasName("PK__MessageH__C87C037C2404515E");

            entity.ToTable("MessageHistory");

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.ChatbotServiceId).HasColumnName("ChatbotServiceID");
            entity.Property(e => e.MessageType).HasMaxLength(50);
            entity.Property(e => e.SentAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.ChatbotService).WithMany(p => p.MessageHistories)
                .HasForeignKey(d => d.ChatbotServiceId)
                .HasConstraintName("FK__MessageHi__Chatb__6D0D32F4");

            entity.HasOne(d => d.User).WithMany(p => p.MessageHistories)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__MessageHi__UserI__6C190EBB");
        });

        modelBuilder.Entity<Reminder>(entity =>
        {
            entity.HasKey(e => e.ReminderId).HasName("PK__Reminder__01A830A76731D668");

            entity.ToTable("Reminder");

            entity.Property(e => e.ReminderId).HasColumnName("ReminderID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.IsOneTime).HasDefaultValue(false);
            entity.Property(e => e.RepeatDays).HasMaxLength(50);
            entity.Property(e => e.UpdatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.Reminders)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Reminder__UserID__5FB337D6");
        });

        modelBuilder.Entity<ReminderDrug>(entity =>
        {
            entity.HasKey(e => e.ReminderDrugId).HasName("PK__Reminder__ECB1E6FF0BDE1221");

            entity.ToTable("ReminderDrug");

            entity.Property(e => e.ReminderDrugId).HasColumnName("ReminderDrugID");
            entity.Property(e => e.DrugId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DrugID");
            entity.Property(e => e.ReminderId).HasColumnName("ReminderID");

            entity.HasOne(d => d.Drug).WithMany(p => p.ReminderDrugs)
                .HasForeignKey(d => d.DrugId)
                .HasConstraintName("FK__ReminderD__DrugI__6754599E");

            entity.HasOne(d => d.Reminder).WithMany(p => p.ReminderDrugs)
                .HasForeignKey(d => d.ReminderId)
                .HasConstraintName("FK__ReminderD__Remin__66603565");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__Role__8AFACE3A3E96480B");

            entity.ToTable("Role");

            entity.HasIndex(e => e.RoleName, "UQ__Role__8A2B6160712AC5BF").IsUnique();

            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.RoleName).HasMaxLength(50);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__User__1788CCAC08D588F2");

            entity.ToTable("User");

            entity.HasIndex(e => e.Email, "UQ__User__A9D105341CD0AF4A").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.Fcmtoken).HasColumnName("FCMToken");
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.Otp)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("OTP");
            entity.Property(e => e.PasswordHash).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(15);
            entity.Property(e => e.RefreshToken).HasColumnName("refreshToken");
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.UpdatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__User__RoleID__4D94879B");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}